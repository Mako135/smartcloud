---
import { Toaster } from "@/components/ui/sonner";
import "@/styles/globals.css";
import Container from "@/widgets/Container.astro";
import Footer from "@/widgets/Footer.astro";
import Header from "@/widgets/Header.astro";

interface Props {
  title: string;
  description: string;
  descriptionUz?: string;
  keywords: string;
  keywordsUz?: string;
  url: string;
  image?: string;
  author?: string;
}

const {
  title,
  description,
  descriptionUz,
  keywords,
  keywordsUz,
  url,
  image,
  author,
} = Astro.props;
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return "dark";
  };
  const isDark = getThemePreference() === "dark";

  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Динамические мета-теги -->
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <link rel="canonical" href={url} />

    <!-- Узбекские мета-теги -->
    {
      descriptionUz && (
        <meta name="description" lang="uz" content={descriptionUz} />
      )
    }
    {keywordsUz && <meta name="keywords" lang="uz" content={keywordsUz} />}

    <!-- Open Graph (Facebook, LinkedIn) -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={url} />
    {image && <meta property="og:image" content={image} />}

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    {image && <meta name="twitter:image" content={image} />}
    {author && <meta name="author" content={author} />}

    <!-- Yandex.Metrika counter -->
    <script type="text/javascript" is:inline>
      (function (m, e, t, r, i, k, a) {
        m[i] =
          m[i] ||
          function () {
            (m[i].a = m[i].a || []).push(arguments);
          };
        m[i].l = 1 * new Date();
        for (var j = 0; j < document.scripts.length; j++) {
          if (document.scripts[j].src === r) {
            return;
          }
        }
        (k = e.createElement(t)),
          (a = e.getElementsByTagName(t)[0]),
          (k.async = 1),
          (k.src = r),
          a.parentNode.insertBefore(k, a);
      })(
        window,
        document,
        "script",
        "https://mc.yandex.ru/metrika/tag.js",
        "ym"
      );

      ym(99998614, "init", {
        clickmap: true,
        trackLinks: true,
        accurateTrackBounce: true,
        webvisor: true,
      });
    </script>
    <noscript
      ><div>
        <img
          src="https://mc.yandex.ru/watch/99998614"
          style="position:absolute; left:-9999px;"
          alt=""
        />
      </div></noscript
    >
    <!-- /Yandex.Metrika counter -->

    <!-- Google Tag Manager -->
    <script is:inline>
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != "dataLayer" ? "&l=" + l : "";
        j.async = true;
        j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, "script", "dataLayer", "GTM-WZ8LL8Z");
    </script>
    <!-- End Google Tag Manager -->

    2. Вставьте этот код сразу же после открывающего тега :

    <!-- Google Tag Manager (noscript) -->
    <noscript
      ><iframe
        src="https://www.googletagmanager.com/ns.html?id=GTM-WZ8LL8Z"
        height="0"
        width="0"
        style="display:none;visibility:hidden"></iframe></noscript
    >
    <!-- End Google Tag Manager (noscript) -->

    <!-- Google tag (gtag.js) -->
    <script
      async
      src="https://www.googletagmanager.com/gtag/js?id=G-MLT9M608GM"
      is:inline></script>
    <script is:inline>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        window.dataLayer.push(arguments);
      }
      // Пример вызова
      gtag("js", new Date());
      gtag("config", "G-MLT9M608GM");
    </script>
  </head>
  <body class="dark:bg-black">
    <div
      class="fixed bottom-0 left-0 right-0 top-0 bg-[linear-gradient(to_right,#4f4f4f2e_1px,transparent_1px),linear-gradient(to_bottom,#4f4f4f2e_1px,transparent_1px)] bg-[size:14px_24px] [mask-image:radial-gradient(ellipse_60%_50%_at_50%_0%,#000_50%,transparent_100%)] -z-10"
    >
    </div>
    <div
      class="absolute -z-20 left-0 right-0 h-screen w-screen
            bg-[radial-gradient(ellipse_at_top,_#C3CBDC_0%,_#fff_54%)]
            dark:bg-[radial-gradient(ellipse_at_top,_rgba(32,49,77,255)_0%,_rgba(0,0,0,1)_50%)]
            sm:w-[90vw] sm:h-[90vh] sm:rounded-3xl
            md:w-[80vw] md:h-[80vh] md:rounded-full
            lg:w-[70vw] lg:top-[-10%] lg:rounded-full"
    >
    </div>

    <Toaster client:idle richColors />
    <Header />
    <Container>
      <slot />
    </Container>
    <Footer />
  </body>
</html>
